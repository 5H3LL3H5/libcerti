<?xml version="1.0" encoding="utf-8"?><!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/research/group/darts/uppaal/flat-1_1.dtd'><nta><declaration>// Place global declarations here.
const   int nbFederate = 2;
typedef int[1,nbFederate] RangeFederate;

// Channel for sending M_Tick_Request
chan Tick_rq[RangeFederate];

// Channel for sending M_Tick_Request_Next
chan Tick_rqNext[RangeFederate];

// Channel for sending M_Tick_Request_Stop
chan Tick_rqStop[RangeFederate];</declaration><template><name x="5" y="5">RTIA</name><parameter>RangeFederate FedRank</parameter><declaration>// Place local declarations here.

// Does RTIA have to handle multiple Callback?
bool multiple=false;

// ??
bool result  =false;

// Does current tick has timeout?
// 0 means timeout is not used
int timeout =0; 

 // 0 means maxTicks is not used
int maxTicks=0;

</declaration><location id="id0" x="0" y="-464"><name x="-42" y="-494">TICK_NEXT</name></location><location id="id1" x="-352" y="-160"><name x="-408" y="-136">TICK_CALLBACK</name></location><location id="id2" x="-320" y="-480"><name x="-376" y="-512">TICK_BLOCKING</name></location><location id="id3" x="8" y="-168"><name x="-30" y="-130">TICK_RETURN</name></location><location id="id4" x="-600" y="-312"><name x="-632" y="-344">NO_TICK</name></location><init ref="id4"/><transition><source ref="id0"/><target ref="id3"/><label kind="guard" x="16" y="-336">!(result==true)</label></transition><transition><source ref="id0"/><target ref="id1"/><label kind="guard" x="-168" y="-432">result==true</label></transition><transition><source ref="id2"/><target ref="id3"/></transition><transition><source ref="id1"/><target ref="id3"/></transition><transition><source ref="id4"/><target ref="id1"/><label kind="synchronisation" x="-592" y="-216">Tick_rq[FedRank]?</label><label kind="assignment" x="-592" y="-200">result=false</label></transition><transition><source ref="id4"/><target ref="id2"/><label kind="synchronisation" x="-592" y="-424">Tick_rq[FedRank]?</label><label kind="assignment" x="-576" y="-440">result=false</label></transition></template><template><name>libRTI</name><parameter>RangeFederate FedRank</parameter><location id="id5" x="232" y="-24"><name x="222" y="-54">HANDLE_CALLBACK</name></location><location id="id6" x="-64" y="184"><name x="-96" y="144">ASYNC_TICKING</name></location><location id="id7" x="24" y="-184"><name x="-24" y="-216">SYNC_TICKING</name></location><location id="id8" x="-320" y="24"><name x="-400" y="-16">NOT_TICKING</name></location><init ref="id8"/><transition><source ref="id5"/><target ref="id7"/><label kind="synchronisation" x="168" y="-240">Tick_rqNext[FedRank]!</label><nail x="256" y="-144"/><nail x="168" y="-216"/></transition><transition><source ref="id5"/><target ref="id8"/><label kind="synchronisation" x="-120" y="16">Tick_rqStop[FedRank]!</label></transition><transition><source ref="id7"/><target ref="id5"/></transition><transition><source ref="id7"/><target ref="id8"/><label kind="synchronisation" x="-176" y="-32">Tick_rq[FedRank]?</label><nail x="-72" y="-64"/><nail x="-176" y="-32"/></transition><transition><source ref="id8"/><target ref="id6"/><label kind="synchronisation" x="-296" y="112">Tick_rq[FedRank]!</label></transition><transition><source ref="id8"/><target ref="id7"/><label kind="synchronisation" x="-240" y="-120">Tick_rq[FedRank]!</label><nail x="-208" y="-72"/><nail x="-96" y="-104"/></transition></template><system>// Place template instantiations here.
// We instantiate 2 federates (libRTIs) with their corresponding RTIAs
libRTI_1 = libRTI(1);
libRTI_2 = libRTI(2);
RTIA_1 = RTIA(1);
RTIA_2 = RTIA(2);


// List one or more processes to be composed into a system.
system libRTI_1, RTIA_1, libRTI_2, RTIA_2;</system></nta>